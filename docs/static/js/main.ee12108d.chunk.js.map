{"version":3,"sources":["Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","fileToDataUrl","file","Promise","resolve","reject","fileReader","FileReader","addEventListener","evt","currentTarget","result","Error","error","readAsDataURL","handleSelect","a","files","target","all","map","o","urls","setState","state","imgs","concat","onRemoveItem","i","filter","item","j","style","display","position","width","height","ref","type","name","multiple","onChange","this","pointerEvents","color","fontSize","backgroundColor","bottom","left","right","margin","textAlign","flexDirection","justifyContent","flexWrap","length","index","src","top","onClick","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAEqBA,E,kDACnB,aAAe,IAAD,8BACZ,gBAMFC,cAAgB,SAACC,GACf,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAa,IAAIC,WAEvBD,EAAWE,iBAAiB,QAAQ,SAACC,GACnCL,EAAQK,EAAIC,cAAcC,WAG5BL,EAAWE,iBAAiB,SAAS,SAACC,GACpCJ,EAAO,IAAIO,MAAMH,EAAIC,cAAcG,WAGrCP,EAAWQ,cAAcZ,OAnBf,EAuBda,aAvBc,uCAuBC,WAAON,GAAP,iBAAAO,EAAA,6DACPC,EADO,YACKR,EAAIS,OAAOD,OADhB,SAEMd,QAAQgB,IAAIF,EAAMG,KAAI,SAACC,GAAD,OAAO,EAAKpB,cAAcoB,OAFtD,OAEPC,EAFO,OAGb,EAAKC,UAAS,SAACC,GAGb,MAAO,CACLC,KAHWD,EAAMC,KAAKC,OAAOJ,OAJpB,2CAvBD,wDAoCdK,aAAe,SAAAC,GACb,EAAKL,UAAS,SAACC,GAGb,MAAO,CACLC,KAHWD,EAAMC,KAAKI,QAAO,SAACC,EAAMC,GAAP,OAAaH,IAAMG,UApCpD,EAAKP,MAAQ,CACXC,KAAM,IAHI,E,0CA0Dd,WAAU,IAAD,OACP,OACE,gCACE,qBAAKO,MAAO,CAAEC,QAAS,eAAvB,SACE,sBAAKD,MAAO,CAAEE,SAAU,YAAxB,UACE,8BACE,uBACEF,MAAO,CAAEG,MAAO,QAASC,OAAQ,SACjCC,IAAI,OACJC,KAAK,OACLC,KAAK,cACLC,SAAS,OACTC,SAAUC,KAAK3B,iBAGnB,qBACEiB,MAAO,CACLW,cAAe,OACfT,SAAU,WACVC,MAAO,QACPC,OAAQ,QACRQ,MAAO,QACPC,SAAU,OACVC,gBAAiB,QACjBC,OAAQ,MACRC,KAAM,IACNC,MAAO,KAXX,SAcE,mDAKN,qBACEjB,MAAO,CACLkB,OAAQ,OACRC,UAAW,SACXlB,QAAS,OACTmB,cAAe,MACfC,eAAgB,eAChBC,SAAS,QAPb,SAU8B,IAA3BZ,KAAKlB,MAAMC,KAAK8B,QACfb,KAAKlB,MAAMC,KAAKL,KAAI,SAACU,EAAM0B,GAAP,OAClB,8BACE,sBAAKxB,MAAO,CAAEG,MAAO,QAASD,SAAU,YAAxC,UACE,qBAAKF,MAAO,CAAEG,MAAO,QAASe,OAAQ,QAAUO,IAAK3B,IAErD,wBAEEE,MAAO,CAAEE,SAAU,WAAYwB,IAAK,IAAKT,MAAO,KAChDU,QAAS,kBAAM,EAAKhC,aAAa6B,IAHnC,gC,GA7GkBI,a,MCSrBC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee12108d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Loader extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      imgs: [],\r\n    };\r\n  }\r\n\r\n  fileToDataUrl = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n\r\n      fileReader.addEventListener(\"load\", (evt) => {\r\n        resolve(evt.currentTarget.result);\r\n      });\r\n\r\n      fileReader.addEventListener(\"error\", (evt) => {\r\n        reject(new Error(evt.currentTarget.error));\r\n      });\r\n\r\n      fileReader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  handleSelect = async (evt) => {\r\n    const files = [...evt.target.files];\r\n    const urls = await Promise.all(files.map((o) => this.fileToDataUrl(o)));\r\n    this.setState((state) => {\r\n      const imgs = state.imgs.concat(urls);\r\n\r\n      return {\r\n        imgs,\r\n      };\r\n    });\r\n\r\n\r\n  };\r\n  onRemoveItem = i => {\r\n    this.setState((state) => {\r\n      const imgs = state.imgs.filter((item, j) => i !== j);\r\n \r\n      return {\r\n        imgs,\r\n      };\r\n    });\r\n  };\r\n  // У вас в массиве - dataUrl, можете использовать в качестве значения атрибута src тега img\r\n\r\n  // onChange = (e) => {\r\n  //   let files = [...e.target.files];\r\n  //   this.setState(\r\n  //       state => {\r\n  //           const imgs = state.imgs.concat(files);\r\n\r\n  //           return {\r\n  //             imgs,\r\n\r\n  //           }})}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ display: \"inline-grid\" }}>\r\n          <div style={{ position: \"relative\" }}>\r\n            <div>\r\n              <input\r\n                style={{ width: \"300px\", height: \"100px\" }}\r\n                ref=\"file\"\r\n                type=\"file\"\r\n                name=\"user[image]\"\r\n                multiple=\"true\"\r\n                onChange={this.handleSelect}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                pointerEvents: \"none\",\r\n                position: \"absolute\",\r\n                width: \"300px\",\r\n                height: \"100px\",\r\n                color: \"black\",\r\n                fontSize: \"2rem\",\r\n                backgroundColor: \"green\",\r\n                bottom: \"0px\",\r\n                left: \"0\",\r\n                right: \"0\",\r\n              }}\r\n            >\r\n              <p> Click Here</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            margin: \"50px\",\r\n            textAlign: \"center\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            flexWrap:'wrap'\r\n          }}\r\n        >\r\n          {this.state.imgs.length !== 0 &&\r\n            this.state.imgs.map((item, index) => (\r\n              <div >\r\n                <div style={{ width: \"200px\", position: \"relative\" }}>\r\n                  <img style={{ width: \"200px\", margin: \"20px\" }} src={item} />\r\n\r\n                  <button\r\n                    \r\n                    style={{ position: \"absolute\", top: \"0\", right: \"0\" }}\r\n                    onClick={() => this.onRemoveItem(index)}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Loader from './Loader';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Loader/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}